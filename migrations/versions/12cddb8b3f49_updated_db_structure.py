"""updated db structure

Revision ID: 12cddb8b3f49
Revises: 
Create Date: 2024-08-17 18:48:25.721196

"""
from alembic import op
import sqlalchemy as sa
import flask_security


# revision identifiers, used by Alembic.
revision = '12cddb8b3f49'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('permissions', flask_security.datastore.AsaList(), nullable=True),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role')),
    sa.UniqueConstraint('name', name=op.f('uq_role_name'))
    )
    op.create_table('user',
    sa.Column('fs_webauthn_user_handle', sa.String(length=64), nullable=True),
    sa.Column('mf_recovery_codes', flask_security.datastore.AsaList(), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('us_phone_number', sa.String(length=128), nullable=True),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('us_totp_secrets', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('fs_uniquifier', sa.String(length=64), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('current_login_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_ip', sa.String(length=64), nullable=True),
    sa.Column('current_login_ip', sa.String(length=64), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('tf_primary_method', sa.String(length=64), nullable=True),
    sa.Column('tf_totp_secret', sa.String(length=255), nullable=True),
    sa.Column('tf_phone_number', sa.String(length=128), nullable=True),
    sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email')),
    sa.UniqueConstraint('fs_uniquifier', name=op.f('uq_user_fs_uniquifier')),
    sa.UniqueConstraint('fs_webauthn_user_handle', name=op.f('uq_user_fs_webauthn_user_handle')),
    sa.UniqueConstraint('us_phone_number', name=op.f('uq_user_us_phone_number')),
    sa.UniqueConstraint('username', name=op.f('uq_user_username'))
    )
    op.create_table('dataset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dataset_name', sa.String(length=100), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], name=op.f('fk_dataset_creator_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_dataset'))
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_roles_users_role_id_role')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_roles_users_user_id_user'))
    )
    op.create_table('user_api_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=100), nullable=True),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('expired_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_api_token_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_api_token'))
    )
    op.create_table('dataset_management',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('permissions', sa.Enum('READ', 'READ_WRITE', 'READ_WRITE_DELETE', name='permissions'), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], name=op.f('fk_dataset_management_dataset_id_dataset')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_dataset_management_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_dataset_management'))
    )
    op.create_table('device',
    sa.Column('id', sa.String(length=100), nullable=False),
    sa.Column('device_model', sa.String(length=255), nullable=True),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], name=op.f('fk_device_dataset_id_dataset')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_device'))
    )
    op.create_table('processing_result',
    sa.Column('id', sa.String(length=100), nullable=False),
    sa.Column('dataset_id', sa.String(length=100), nullable=True),
    sa.Column('processing_type', sa.Enum('ARITHMETICAL_MEAN', 'GEOMETRIC_MEAN', 'ROOT_MEAN_SQUARE', 'MIN', 'MAX', 'STANDARD_DEVIATION', 'CORRELATION', 'REGRESSION_ANALYSIS', name='processingtype'), nullable=True),
    sa.Column('processing_result', sa.Text(), nullable=True),
    sa.Column('processing_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], name=op.f('fk_processing_result_dataset_id_dataset')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_processing_result'))
    )
    op.create_table('device_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('key', sa.String(length=64), nullable=True),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('data_sending_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], name=op.f('fk_device_data_device_id_device')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_device_data'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('device_data')
    op.drop_table('processing_result')
    op.drop_table('device')
    op.drop_table('dataset_management')
    op.drop_table('user_api_token')
    op.drop_table('roles_users')
    op.drop_table('dataset')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###
